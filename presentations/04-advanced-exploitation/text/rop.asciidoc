Næste mitigation
----------------

[source,bash]
------------------------------------------------
$ checksec assignments/fmt_nx
[*] '/vagrant/presentations/04-advanced-exploitation/assignments/fmt_nx'
    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      PIE enabled
------------------------------------------------

Næste mitigation
----------------

[source,bash]
------------------------------------------------
$ grep fmt_nx /proc/$(pidof fmt_nx)/maps
565b4000-565b6000 r-xp 00000000 00:7b 22   /04-advanced-exploitation/fmt_nx
565b6000-565b7000 r--p 00001000 00:7b 22   /04-advanced-exploitation/fmt_nx
565b7000-565b8000 rw-p 00002000 00:7b 22   /04-advanced-exploitation/fmt_nx
------------------------------------------------

Løsning 1 - ret2libc
--------------------

Udføres `system("/bin/bash");` ser stakken således ud ved første instruktion i `system@libc`:

image::../images/ret2libc_1.png[width=600]

Løsning 1 - ret2libc
--------------------

Hvad nu hvis vi får stakken til at se sådan her ud lige inden en `ret` instruktion?:

image::../images/ret2libc_2.png[width=600]

Hvordan finder vi `system@libc`?
--------------------------------

Fandens komplekst men meget lærerigt at forsøge manuelt.

Indtil lysten til den slags dukker op kan I benytte `DynELF` klassen fra `pwntools`.

[source,python]
------------------------------------------------
class DynELF:
    ...
    def __init__(self, leak, pointer=None, elf=None):
        ...
------------------------------------------------

Opgave 6 - Lav arbitrary read funktion
--------------------------------------

Test den ved at resolve `system` fra `libc`

Opgave 7 - Returner til `system`
--------------------------------

