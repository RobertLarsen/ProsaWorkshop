Format string
-------------

Format strings bruges til formattering af tekstuel data og findes i mange programmeringssprog.

Et eksempel:

image::../images/printf_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
char * name = "Robert";
int age = 38;
printf("My name is '%s' and I am %d years old\n", name, age);
------------------------------------------------

Funktioner
----------

printf, fprintf, vprintf, vfprintf, dprintf, sprintf, snprintf, syslog, kprintf....

MANGE!

Variadic function
-----------------

Tager et ikke-fixed antal argumenter.

Funktionen udleder antallet af argumenter fra format strengen.

Simple format specifiers
------------------------

* %d - Formatterer en integer som decimaltal
* %x - Formatterer en integer som hexadecimaltal
* %f - Formatterer en floating point
* %s - Følger en pointer til en streng

Specificér bredde
-----------------

* %10d - Højrestil med ti pladser, udfyld med mellemrum
* %010d - Højrestil med ti pladser, udfyld med nul
* 0x%08x - Typisk formattering af pointer

Ombyt rækkefølge, gentag, undlad brug
-------------------------------------

* %d/%d %d - Første, anden, tredje
* %3$d - %2$d %2$d - Tredje, anden, anden

F.eks. til europæisk/amerikansk dato formattering.

Hvad hvis der indexeres ud over argumenterne?
---------------------------------------------

image::../images/printf_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
char * name = "Robert";
int age = 38;
printf("Muhahaha %100$08x\n", name, age);
------------------------------------------------

Første opgave - Leak stakken og omgå ASLR/Canaries
--------------------------------------------------

[source,c]
------------------------------------------------
include::../assignments/fmt.bug[]
------------------------------------------------

Første opgave - Leak stakken og omgå ASLR/Canaries
--------------------------------------------------

Helt præcis find ud af følgende:
# Hvad er værdien af kanarien?
# Hvor er `fmt` programmet indlæst (base addr)?
# Hvad er adressen på bufferen?
# Hvad er adressen på retur adressen?
# Hvad er værdien af vores socket file descriptor?

Andre eksempler på leaks
------------------------

[source,c]
------------------------------------------------
#include <stdio.h>
void how_old() {
    int age;
    printf("Enter your age: ");
    scanf("%d", &age);
}
void leak() {
    char * ptr;
    printf("Have some data: %s\n", ptr);
}
int main(int argc, char ** argv) {
    how_old();
    leak();
    return 0;
}
------------------------------------------------

Andre eksempler på leaks
------------------------

image::../images/heartbleed1.png[height=300]

Andre eksempler på leaks
------------------------

image::../images/heartbleed2.png[height=300]

Andre eksempler på leaks
------------------------

image::../images/heartbleed3.png[height=300]

Andre eksempler på leaks
------------------------

image::../images/heartbleed4.png[height=300]

Andre eksempler på leaks
------------------------

image::../images/heartbleed5.png[height=300]

Andre eksempler på leaks
------------------------

image::../images/heartbleed6.png[height=300]

Opdatering af variable
----------------------

* %n - Opdater fire byte dword med antallet af udskrevne bytes
* %hn - Opdater to byte word med antallet af udskrevne bytes
* %hhn - Opdater én byte med antallet af udskrevne bytes

[source,c]
------------------------------------------------
#include <stdio.h>
int main(int argc, char ** argv) {
    int i, n;
    printf("Hello %n%s\n", &n, argv[1]);
    for (i = 2; i < argc; i++) {
        printf("%*s%s\n", n, "", argv[i]);
    }
    return 0;
}
------------------------------------------------

Opdatering af variable
----------------------

[source,shell]
------------------------------------------------
$ ./t Robert Chris Bang Larsen
Hello Robert
      Chris
      Bang
      Larsen
------------------------------------------------

Opdatering af variable
----------------------

image::../images/write_stack.png[height=600]

Anden opgave - Find tre led i `ebp` kæden
-----------------------------------------

...og lad os da også bare se, at vi kan opdatere en af dem

Find tre led i `ebp` kæden??? WTF??
-----------------------------------

Tredje opgave - Lav arbitrær pointer i tredje led
-------------------------------------------------

Fjerde opgave - Udbyg med arbitrary write
-----------------------------------------

Exploit ved at overskrive returadressen så vi returnerer til bufferen, som vi selvfølgelig først har fyldt med shellcode.

Femte opgave - Ændr til at benytte GOT overwrite
------------------------------------------------
