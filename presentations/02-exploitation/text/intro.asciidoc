Terminologi
-----------

Bug - Fejl i software (fejlberegninger, knapper som ikke reagerer, crash)

Sårbarhed (vulnerability) - Fejl som har sikkerhedsmæssige koncekvenser (kode eksekvering, omgåelse af sikkerhedstjeks, informationslæk, overskrivning af filer, osv.)

Exploit - Software som udnytter en (eller flere) specifik sårbarhed

Shellcode - En stump maskinkode som man ønsker at få udført via en sårbarhed i et program

Writeup - Beskrivelse af hvordan man er kommet frem til en løsning

Exploit
-------

* Proof of Concept
* Weaponized

Exploit - PoC
-------------

Skal bare bevise eksistensen af en sårbarhed

* Skrevet imod én version af softwaren
* Virker kun nogen gange
* Støjer i logs/cpu/memory
* Begrænset 
* Crasher processen/operativ systemet

Exploit - Weaponized
--------------------

Skal kunne bruges aktivt

* Virker HVER gang
* Virker mod alle sårbare versioner
* Stealth!
* Konfigurerbart payload
* Ødelægger intet i processen/reparerer processen

Typer af sårbarheder
--------------------

* Buffer overflow
** Stack
** Heap
* Integer conversion/overflow/underflow
* Arbitrary read/write
* Double free
* Use-after-free
* Uninitialized variables
* Format string
* Injection
** SQL
** Cmd. line
** xpath
** ....
* XML External Entity
* Cross site scripting
** Ikke kun på web sites!
* Race conditions
* Sikkert mange flere

Typer af sårbarheder - som vi holder os til
-------------------------------------------

* Buffer overflow
** Stack
* Integer conversion/overflow/underflow

Buffer?
-------

...er et område i hukommelsen af en hvis størrelse til data.
Ofte men ikke nødvendigvis et array.

Buffer overflow
---------------

...er hvad der sker, når man hælder mere data i bufferen, end den kan indeholde.

Dette kan under de rette omstændigheder give mulighed for at eksekvere arbitrær maskinkode.

Gammelt problem
---------------

Første kendte udnyttelse var i 1988 da Morris ormen spredte sig bl.a. vha. et buffer overflow i 'fingerd'.

Velbeskrevet i 1996, da Aleph One skrev "Smashing the Stack for Fun and Profit" i Phrack.

I dag?
------

Stadig et af de oftest forekomne sikkerhedsproblemer i den binære verden.

Operativ systemer, hardware designere og compiler udviklere forsøger at gøre det sværere at udnytte fejlen, men det sker stadig.

Første opgave
-------------

Simpelt eksempel. Findes i 'assignments/simple_login'.

[source,c]
------------------------------------------------
include::../assignments/simple_login.c[]
------------------------------------------------

Første opgave
-------------

Simpelt eksempel. Findes i 'assignments/simple_login'.

image::../images/simple_login_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
include::../assignments/simple_login.c[]
------------------------------------------------

Første opgave
-------------

Hvad sker der, hvis vi skriver 33 tegn i vores navn?

image::../images/simple_login_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
include::../assignments/simple_login.c[]
------------------------------------------------

Første opgave
-------------

Hvad sker der, hvis vi skriver 52 tegn i vores navn?

image::../images/simple_login_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
include::../assignments/simple_login.c[]
------------------------------------------------

Første opgave
-------------

Den lidt sværere. Hvad sker der, hvis vi skriver 45-48 tegn i vores navn?

image::../images/simple_login_stack.png[height=600,float="right"]

[source,c]
------------------------------------------------
include::../assignments/simple_login.c[]
------------------------------------------------

"Problematiske" funktioner
--------------------------

gets -> ALTID et problem

strcpy, strcat, sprintf -> medmindre man selv tjekker input længde

strncpy, strncat, fgets, snprintf, memcpy -> hvis man beregner størrelsen og regner forkert

*Ingen* funktioner er sikre, hvis man ikke bruger dem rigtigt!

*Alle* funktioner, som skriver til hukommelsen har potentiale for at være problematisk!
